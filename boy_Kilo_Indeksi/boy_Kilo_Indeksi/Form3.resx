<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>VÜCUT KİTLE İNDEKSİ
Vücut kitle indeksi (VKİ), bir kişinin kilo ve boy oranını değerlendirerek vücut ağırlığının sağlık açısından uygun
olup olmadığını belirlemek için kullanılan bir ölçüttür. VKİ, kilogram cinsinden ağırlığın, metre cinsinden boyun
karesine bölünmesiyle hesaplanır. Sonuç, bireyin zayıf, normal kilolu, fazla kilolu veya obez kategorilerinden
hangisinde olduğunu belirlemek için kullanılır. Genellikle yetişkinlerde kilo yönetimi ve sağlık risklerini
değerlendirmek için kullanılan bu ölçüt, kişisel faktörler ve kas-kütle oranı gibi değişkenler göz önünde
bulundurularak yorumlanmalıdır.

Vücut Kitle İndeksi (VKİ) Nedir?
Vücut Kitle İndeksi (VKİ), boyunuza göre kilonuzun nasıl olması gerektiğini belirleyen bir sağlık ölçütüdür.
Vücut Kitle İndeksi (VKİ) hesaplama ile boyunuza ve kilonuza göre ideal kilo aralığını öğrenin. Boy kilo
endeksini hemen hesaplayarak sağlıklı bir yaşam için ilk adımı atın ve sağlık risklerini önceden belirleyin. 
Sayfamızda yer alan hesaplama aracı ile boy kilo endeksini kolayca öğrenebilir, sağlıklı kilo aralığını
belirleyebilirsiniz.

Vücut Kitle İndeksi (VKİ), çoğu insanda vücut yağı ile ilişkilidir, sayı ne kadar yüksekse, vücut yağı da o kadar 
fazla olur. Sağlık hizmeti sağlayıcıları, bir kişinin sağlık durumu ve risklerini değerlendirmek için VKİ hesaplama
yöntemini diğer araçlar ve testlerle birlikte kullanır.

Vücut kitle indeksinde mevcut olan yüksek vücut yağı, kalp hastalığı, felç ve tip 2 diyabete yol açabilir.
Düşük vücut yağı ise yetersiz beslenme ile ilgilidir. Yeterli miktarda vücut yağı, vitamin ve minerallerin vücuda
alınmasına yardımcı olur. Ayrıca vücuda enerji sağlar, vücut ısısını ve organlarınızı korur.

Vücut Kitle İndeksi Nasıl Hesaplanır?
Vücut kitle indeksi, bir kişinin vücut ağırlığının (kilogram cinsinden) boyunun karesine (metre cinsinden)
bölünmesiyle hesaplanır. Kullanılan formül VKİ = ağırlık (kg) / boy (m)² şeklindedir.

Boy Kilo Endeksi Hesaplama Adımları
Örneğin; 75 kilogram ağırlığında ve 1.65 metre boyundaki bir kişinin boy kilo endeksi şu şekilde hesaplanır:

İlk olarak metre cinsinden boyun karesi hesaplanır. Bu örnekte, 1.65 x 1.65 = 2.72 m² olur.

İkinci adımda kilogram cinsinden ağırlığı metre kare sonucuna bölün. Yani 75/2.72 işlemi yapılır. Çıkan sonuç ise
27.5’tur. Bu kişinin vücut kitle indeksi 27.5 olarak belirlenir.

Çevrimiçi Vücut Kitle İndeksi (VKİ) Hesaplama Aracı
Vücut Kitle İndeksi (Boy Kilo Endeksi) hesaplama için boy uzunluğunuzu, vücut ağırlığınızı, yaşınızı ve cinsiyetinizi,
sayfanın aşağısında yer alan ekrana girerek hızlı ve doğru bir sonuç alabilirsiniz. VKİ'nizi öğrenmek, ideal 
kilonuzu belirlemek ve sağlığınız hakkında daha fazla bilgi sahibi olmak için bu aracı kullanabilirsiniz.

Vücut Kitle İndeksi Kaç Olmalı?
VKİ hesaplama ile ortaya çıkan değer vücut kitle indeksinin kaç olması gerektiğini gösterir. Sağlıklı bir boy kilo
endeksi için ideal aralık 18.5 ile 24.9 arasındadır. Bu değerlerin altında olanlar zayıf, üstünde olanlar kilolu kabul
edilir.
Kilo tiplerine göre vücut kitle indeksi değerleri şu şekildedir:
</value>
  </data>
</root>